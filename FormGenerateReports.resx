<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnGenerateReports.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DQAACw0B7QfALAAABAlJREFUeF7tm01sDGEYx1tpS0Vb2qqkJ5cWJwlR4SBxk3CU9ICTEgcHNyEVlYgg
        ODlIXNxJHBqJBA1CfX8mOPiIxMfFZ5AIQv2ed56d2R27zezOO7PvrP0l/+7M87zzzPP+d3Zmd2fbUKdO
        nZJMTEy0o2F0G31DaSL7e4LOoM2oR9tKB3a4FL1FrvAdHUAd2mJysJP56DNykddoobaaDOxgzOyq+hxH
        W9ANsxbwBa3Udu1C4QVmF24wom1JX2vRexP1+IDmatoeFJUTjiv4Bgis9yF5CeQY15Q9KCpnfVfYp235
        EFuEfpisx2pN2YGCI15dJxjVtgogLleDHBc0bAcKumTALzSgrfkQ69Wc8BO1aSo+FHPJAOEjGkK92qKB
        9XFJKqs0HB+KuWZAFIa0/fhQLIsG7NT240OxLBqQ/36hEa1H26NINwsgmHUDNnqhaOhmAcTqBnipTJFv
        wBS0Ae0vooNIPkf46GYBxDJtQCkYI+eGY2Z0HpoOIFZzBpCXyR81IwPeyR8dEkCsFg2Qwz+fE2iPLOiQ
        AGI1ZQC5vd4Qn5OoCZl56rCAXCJjFDWA+C4v7XMaNWmutg0gts1L+ZxFUzVd2wawvtUL+5xD0zRtYL02
        DWB5E/pjoh4X0XRN+xDbLUldDSCWWQN4XId+m4iHfGQu+l0B8UEZoKsBxLJowLD2nv+lqdzMmfQeAvlB
        XQwgmJYBL9Fl9MKsxWON9n7JW524i7rMhMqFDZM24ClaobszsL4MPZJkBZxCjVqnFS1HzaZwJbBxkgY8
        RLN1VwUQn4luyqAyGEUtWsIOFEzKgAfInzzLLWgx8p8tlssxoeC6bg2KJmFAePIy0euSgGtopqaimnAe
        teomdqGwbQNk8t1aXup3oPC9voKTFssyJmdQmCtohg61D8VtGhB+5mehW5Iowh3UqUNlbLEj4SryJ8/y
        HCR3suz9doBitgwoNnm5Nk9G+EgQE+QlIshju6Yk14MeSwL+/XKzUihmw4Dw5DuRPMNRuIfyXzLNSO4H
        +md7lruQ7CNH0U+DFSHFvJoVE37NlzP5HAUG5kNcjopwPWcMCE9enik5rCuhnDdMThhQbPJyOMclylvm
        qhvwDCUx+ahU3YBDurls343um2h6VN0AOTz7Vfln57Rw5iRYLeoGaPvxkWJezZI8R4f10RVSM8C/1PE4
        z0TcIBUDwtd5OeG5QioG9OkQGSOXumqc7UuRigH9mndt8kIqBsi1/og+ukZqJ0FXqRug7ceHYi79WDoq
        5s6QFSgmNxezhtVfisq/y2QNc4WyBgXlfnpWGNO27UFReZv7yZR3G+nR7rOfg8ID6I3sxVFeoSXabjKw
        gza0A8kNiq+o2kgP0ov0lNzdoTp1/hcaGv4CbomoMjwvbDcAAAAASUVORK5CYII=
</value>
  </data>
</root>